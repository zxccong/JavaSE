1._集合框架(对象数组的概述和使用)
    * A:案例演示
        * 需求：我有5个学生，请把这个5个学生的信息存储到数组中，并遍历数组，获取得到每一个学生信息。
    *
            Student[] arr = new Student[5];					//存储学生对象
            arr[0] = new Student("张三", 23);
            arr[1] = new Student("李四", 24);
            arr[2] = new Student("王五", 25);
            arr[3] = new Student("赵六", 26);
            arr[4] = new Student("马哥", 20);

            for (int i = 0; i < arr.length; i++) {
                System.out.println(arr[i]);
            }

    * B:画图演示
        * 把学生数组的案例画图讲解
        * 数组和集合存储引用数据类型,存的都是地址值
2.集合框架(集合的由来及集合继承体系图)
  * A:集合的由来
  	* 数组长度是固定,当添加的元素超过了数组的长度时需要对数组重新定义,太麻烦,java内部给我们提供了集合类,能存储任意对象,长度是可以改变的,随着元素的增加而增加,随着元素的减少而减少
  * B:数组和集合的区别
  	* 区别1 :
  		* 数组既可以存储基本数据类型,又可以存储引用数据类型,基本数据类型存储的是值,引用数据类型存储的是地址值
  		* 集合只能存储引用数据类型(对象)集合中也可以存储基本数据类型,但是在存储的时候会自动装箱变成对象
  	* 区别2:
  		* 数组长度是固定的,不能自动增长
  		* 集合的长度的是可变的,可以根据元素的增加而增长
  * C:数组和集合什么时候用
  		* 1,如果元素个数是固定的推荐用数组
  		* 2,如果元素个数不是固定的推荐用集合
  * D:集合继承体系图
3.集合框架(Collection集合的基本功能测试)
  * A:案例演示
  *
  		基本功能演示

  		boolean add(E e)
  		boolean remove(Object o)
  		void clear()
  		boolean contains(Object o)
  		boolean isEmpty()
  		int size()

  * B:注意:
  *
  		collectionXxx.java使用了未经检查或不安全的操作.
  		注意:要了解详细信息,请使用 -Xlint:unchecked重新编译.
  		java编译器认为该程序存在安全隐患
  		温馨提示:这不是编译失败,所以先不用理会,等学了泛型你就知道了
4.集合框架(集合的遍历之集合转数组遍历)
  * A:集合的遍历
  	* 其实就是依次获取集合中的每一个元素。
  * B:案例演示
  	* 把集合转成数组，可以实现集合的遍历
  	* toArray()
  	*

  			Collection coll = new ArrayList();
  			coll.add(new Student("张三",23));		//Object obj = new Student("张三",23);
  			coll.add(new Student("李四",24));
  			coll.add(new Student("王五",25));
  			coll.add(new Student("赵六",26));

  			Object[] arr = coll.toArray();				//将集合转换成数组
  			for (int i = 0; i < arr.length; i++) {
  				Student s = (Student)arr[i];			//强转成Student
  				System.out.println(s.getName() + "," + s.getAge());
  			}


