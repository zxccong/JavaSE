1.面向对象思想的概述
    面向过程的思想概述
        第一步
        第二步
    面向对象的思想概述
        找对象（第一步，第二步）
    面向对象的思想特点
        是一种更加符合我们思想习惯
        可以将复杂的事情简单化
        把我们从执行者变成指挥者
            角色发生了转换
    面向对象开发
        就是不断的创建对象，使用对象，智慧对象
    面向对象的设计
        其实就是在管理和维护对象之间的关系
    面向对象的特征
        封装(encapsulation)
        继承(inheritance)
        多态(polymorphism)
2.类和对象的概述
    我们学习编程是为了什么
        为了把生活中的事物用学习语言描述出来
    我们如何描述现实事物
        属性 就是用来描述信息（名词）
        行为 就是该事物能干什么（动词）
    Java中最基本的单位就是类，Java中用class描述事物也是如此
        成员变量    事物的属性
        成员方法    事物的行为
    定义其实就是定义类的成员（成员变量和成员方法）
        成员变量 和以前定义变量一样，只不过位置发生了变化，在类中，在方法外
        成员方法 和以前定义方法一样，只不过把static去掉，后面详细讲解static的作用
    类和对象的概念
        类：是一组相关的属性和行为的集合
        对象：是该类事物的具体体现
3.学生类、手机类定义
    Student、Phone
4.学生类、手机类的使用
    文件名
        一个java文件写2个类一个基本类，一个测试类
        建议文件名称和测试类名称一致（idea兼容性不好，不用）
    如何创建对象
        类名 对象名 = new 类名（）；
    如何使用成员变量
        对象名.成员变量
    如何使用成员变量的方法
        对象名.方法名
5.一个对象的内存图
    方法区
        相当于代码仓库
    运行流程分析
        Demo1_Student.class进入方法区
        main函数进入（栈）
        遇到Student student= new Student();
        将Student.class加载进（方法区）：成员变量、成员方法
        new Student()在（堆）创建内存空间，拥有自己的变量，和方法
        把地址赋值到main函数的Student student去
        调用student.playGame();时，playGame()方法进（栈）
        运行完弹栈
6.两个对象的内存图
    如果一个对象被赋值为null，在该堆中该对象信息，
    就会变成没有任何引用该对象信息，就会编程垃圾Java中有完善的垃圾回收机制
    没有必要主动赋值为null,当引用他们的方法弹栈自动变成垃圾
7.三个引用两个对象
    和数组差不多这里不解释
8.成员变量和局部变量
    位置不同
        成员变量在方法外
        局部变量在方法声明中
    在内存的位置不同
        成员变量:在堆内存中（属于对象，对象进堆内存）
        局部变量：在栈内存中（属于方法，方法进栈内存）
    声明周期不一样
        成员变量，随着对象的创建而存在，随着对象的消失而消失
        局部变量随着调用二存在，随着方法调用完毕而消失
    初始化值不一样
        成员变量：有默认初始化值
        局部变量：没有默认初始化值，必须定义，赋值，才能使用
    注意事项：
        局部变量名称可以和成员变量一样，在方法中使用，采用的是就近原则
        基本数据类型变量包括byte,short,int,long,float,double,boolean,char
        引用数据类型包括：数组、类、接口、枚举
9.如果方法的形式参数是类名的时候是怎么实现调用的
    public void speak(Student e)
    speak(new Student())引用数据类型要给的地址值
10.匿名对象
    new Student();
    区别，匿名对象不能重复使用，每次都要重新申请创建对象
    匿名对象可以作为参数传递
11.封装的概述
    什么是封装
        是指隐藏对象的属性和实现细节，仅仅提供对外提供的公共访问方式
    封装的好处
        隐藏细节，提供公共的访问方法
        提高了代码的复用性
        提高安全性
    封装的原则
        将不需要对外提供的内容隐藏起来
        对属性隐藏，提供公共的方法对其访问
12.private关键字的使用
    特点：
        是一个权限修饰符
        可以修饰成员变量和方法
        被其修饰的成员只能在本类中被访问到
    案例get和set方法太过简单不做演示
    private 只是封装的一种体现方式，不能说封装就是private
13.this关键字
    代表当前关键字的引用
    案例
        this的应用场景(在get,set的时候用到)
        用来区分成员变量和局部变量重名
14.总结，自己完成一个get，set,的类，创建个对象完成一下设置，调用方法
