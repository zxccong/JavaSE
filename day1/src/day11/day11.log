1.eclipse
    是一个可扩展的开源IDE
    http://eclipse.org
2.课程版本
    3.7.2 indigo
    HelloWorld案例
        创建project -> idea module
        创建package ->
        创建类 继承类/继承接口/是否添加构造方法/是否添加构造方法
        保存会自动编译
        运行
    汉化
        从3.5开始，安装目录下有dropins,只要将汉化插件解压eclipse目录后放到该目录就可
    红色：致命提示
    黄色：警告可以不处理
    学习用英文的
3.视图，视窗概述
    左边：包资源管理器
    右边：大纲目录
    中间代码区
    下面：控制台
    F4显示继承层次结构
    Debug模式
4.工作空间，和基本配置
    高版本编译，低版本运行，不可以
    配置JDK版本 java - install
    去掉默认注释 java - code Style - code template
    显示行号 右侧右击show line number
    字体大小 general -  appearance - colors and fonts - java editor text font (控制台debug - console font)(普通文件base - Test Font)
    恢复窗体目录 Window-reset Perspective
    保存窗口window - save - perspective
    取消悬浮提示 java -editor hovers 去掉勾勾

5.辅助键
    * A:Alt+/ 起提示作用
    * B:main+alt+/,syso+alt+/,给出其他提示
    * C:补充输出语句,选中需要输出的部分,alt+/选择最后一项即可
    * C:定义自己的alt + /
    	* windows--perference-Java-Editor-Templates--New
    sysout
    alt +/ 提示
6.快捷键
    * A:新建 ctrl + n
    * B:格式化  ctrl+shift+f
    * C:导入包  ctrl+shift+o
    * D:注释  ctrl+/,ctrl+shift+/,ctrl+shift+\
    * E:代码上下移动 选中代码alt+上/下箭头
    * F:查看源码  选中类名(F3或者Ctrl+鼠标点击)
    * G:查找具体的类 ctrl + shift + t
    * H:查找具体类的具体方法 ctrl + o
        配合使用（G+H）
    * I:给建议 ctrl+1,根据右边生成左边的数据类型,生成方法
    * J:删除代码 ctrl + d -> idea ctrl+y
    * K:抽取方法alt + shift + m ->idea alt+ /
    * L:改名alt + shift + r ->shift+ F6
7.Java开发工具(Eclipse中如何提高开发效率)(掌握)
    * alt + shift + s  ->idea alt + ins
    * A:自动生成构造方法
    * B:自动生成get/set方法
8.添加学生类进行测试
9.勾选抽象，添加抽象类测试
10.生成jar 包并导入到jar包，不同的project 不能公用
    * A:jar是什么?
        * jar是多个class文件的压缩包。
    * B:jar有什么用?
        * 用别人写好的东西
    * C:打jar包
        * 选中项目--右键--Export--Java--Jar--自己指定一个路径和一个名称--Finish
    * D:导入jar包
        * 复制到项目路径下并添加至构建路径。
    在idea 也可以打包成jar
        然后点击右上角的Project Structure按钮 -Project Structure对话框中选择Artifacts，如果之前没有创建过jar，需要点击加号新建一个
        在弹出框里选择jar类型，选择empty创建一个空的，后面我们再来添加 - 自己要的项目
11.导入项目和删除项目
    * A:删除项目
    	* 选中项目 – 右键 – 删除
    		* 从项目区域中删除
    		* 从硬盘上删除
    * B:导入项目
    	* 在项目区域右键找到import
    	* 找到General，展开，并找到
    	* Existing Projects into Workspace
    	* 点击next,然后选择你要导入的项目
    	* 注意：这里选择的是项目名称
12断点测试
    * A:Debug的作用
    	* 调试程序
    	* 查看程序执行流程
    * B:如何查看程序执行流程
    	* 什么是断点：
    		* 就是一个标记，从哪里开始。
    	* 如何设置断点：
    		* 你想看哪里的程序，你就在那个有效程序的左边双击即可。
    	* 在哪里设置断点：
    		* 哪里不会点哪里。
    		* 目前：我们就在每个方法的第一条有效语句上都加。
    	* 如何运行设置断点后的程序：
    		* 右键 -- Debug as -- Java Application
    	* 看哪些地方：
    		* Debug：断点测试的地方
    			* 在这个地方，记住F6，或者点击也可以。一次看一行的执行过程。
    		* Variables：查看程序的变量变化
    		* ForDemo：被查看的源文件
    		* Console：控制台
    	* 如何去断点：
    		* a:再次双击即可
    		* b:找到Debug视图，Variables界面，找到Breakpoints，并点击，然后看到所有的断点，最后点击那个双叉。
13.查看java 断电调试的基本使用


