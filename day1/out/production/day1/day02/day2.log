1.常量
    什么是常量？
        在运行过程中其值不会发生改变的量
    JAVA中常量的分类
        字面值常量
        自定义常量
    字面值常量的分类
        字符串常量 "abc"
        小数常量 "12.2"
        字符常量 '4' (单引号中只能放单个字符，什么都不放也是不可以的，)
        布尔常量    true
        空常量 null
    案例实践
2.进制概述
    什么是进制？
        就是进制位，逢x进1
    进制的分析
        1byte=8bit，一个位
        0 1 0 1 0 1 0 1  （8个2进制位表示1个byte）
        0 1 0/ 1 0 1/ 0 1 0 （3个8进制位表示1个byte）
        0 1 0 1 /0 1 0 1  （2个16进制位表示1个byte）
    JAVA进制表现形式
        二进制（0b）开头（jdk1.7就可以直接表示二级制了）B可以大写也可以小写
        八进制（0）开头
        十进制,默认
        十六进制（0x）开头0-f X可以大写也可以小写
    案例实践
        打印时会自动转为10进制输出
3.任何进制转换为10进制
    十进制到十进制
        12345=1*10^4+2*10^3+3*10^2+4*10^1+5*10^0
    系数:每一位上的数据
    基数：x进制，基数就是x
    权：在右边开始，从0开始，对应位上的编号就是该位的权
    结果：把系数*基数的权次幂相加
4.十进制转换为任何进制
    十进制转换为10进制
        12345%10=1234……5
        1234%10=123……4
        123%10=12……3
        12%10=1……2
        1%10=0……1
    除积倒去余
        12345
5.快速的进制转换法（8421码）
    //二进制转换十进制
    1       1     1   1      1    1      1    1（二进制）
    1*2^7 1*2^6 1*2^5 1*2^4 1*2^3 1*2^2 1*2^1 1*2^0
    128     64     32   16    8     4      2    1

    获得码表之后
    获得二进制的数值11001100
    1*128+64*1+8*1+4*1=204

    //二进制转换8进制
    60转换8进制
    60转换二进制 111 100
    111 100 (4+2+1) (4+0+0)
    7    4
    60转换十六进制
    11 1100(2+1) (8+4+0+0)
    3    c

    60转换二进制
    60-32-16-8-4
    00111100
6.原码、反码、补码
    原码（最高为为符号位 0 表示正 1 表示负 ，其余位表示数值的大小）
        +7和-7相加的结果应该等于0
            0 0000111（+7）
         +  1 0000111（-7）
        ---------------------
            1 0001110
    相加的结果等于0，引出计算机运算是以补码的形式运算的

    反码（正数的反码与其原码相同；负数的源码是对其原码逐位取反，但符号位除外）
    0 0000111
    1 1111000
    补码（正数的补码与其原码相同，负数的补码是在其反码的末位加1）
    0 0000111
    1 1111001
  ---------------
 1（0 0000000）
    已知原码求补码 已知补码求原码
7.变量
    什么是变量
        程序执行过程中，某个范围内其值可以发生改变
    变量的定义
        数据类型 变量名=变量值；
    为什么要定义变量
        用来不断的存放同一类型的数据常量，并可以重复使用
8.数据类型的概述和分类
    为什么有数据类型
        JAVA语言是强类型语言，对于每一个数据都定义了明确的数据类型，在内存中分配不同的大小内存空间
    JAVA中数据类型的分类
        基本数据类型
        应用数据类型
            面向对象的思想
    基本数据类型的分类（4类8种）
        整数型
            byte  占用一个字节-128 - 127
            short 占用两个字节-2^15 - 2^15-1
            int   占用四个字节-2^31 - 2^31-1
            long  占用八个字节-2^63 - 2^63-1
        浮点型
            float 占用四个字节-3.403E38 - 3.403E38 单精度
            double 占用八个字节-1.798E308 - 1.798E308 双精度
        字符型
            char 占用两个字节 0- 65535
        布尔型
            boolean
                理论上占用八分之一个字节，但Java中没有明确他的大小

9.不同数据类型和变量
    //整数类型(默认的类型是int)
    byte b =10; //占一个字节
    short s = 20 ;//占两个字节
    int i = 30;   //占四个字节
    long x = 88888L; //占八个字节默认是int 要加上L   如果long 类型后面加L，最好加大L，因为小写l太像1

    //浮点类型（默认的类型是double）
    float f =  12.3F; //可能损失精度，报错 占用四个字节
    double d= 33.4D;    //占用八个字节

    //字符类型
    char c = 'a'; //占用两个字节

    //布尔类型
    boolean b1 =true; //占用八分之一个字节

    总结long 类型赋值加上L float类型赋值加上F double赋值可以加上D
10.变量使用中的注意事项
    作用域
        同一个区域不能使用相同的变量名
    初始化问题
        局部变量使用之前必须赋值
    一条语句可以定义多个变量
        int a,b,c,d...;
    //    int x = 10;
    //    int x = 10;

    //        int y ;
    //        System.out.println(y);

    //        int a,b,c;
    //         int a=1,b=2;
11.数据类型转换、隐式转换，强制转换，强制转换后超出范围
    见 DataTypeConversion
12.面试题之变量相加和常量相加的区别
    见 Test1_DataTypeConversion
13.long 类型和float的取值范围谁大谁小
    进行混合运算时byte.short,char不会相互转换，都会自动类型提升为int类型，
    其他类型进行混合运算的是小的数据类型提升为大的
    byte,short,char -- int -- long -- float -- double
    long :8字节
    float : 4字节
    long和float取值范围的
    见Test2_DataTypeConversion
14.字符和字符串参与运算
    char 参与运算会转换为int
    通过ASCII码表
    System.out.println('a'+1);->98
    System.out.println("hello" + 'a' + 1);->helloa1
    任何数据类型用+与字符串连接都会产生新的字符串
    System.out.println('a'+1+"hello");->98hello
    System.out.println(" 5 + 5 = " + 5 + 5);->5 + 5 = 55
    System.out.println(" 5 + 5 = " +( 5 + 5));->5 + 5 = 10
15.char数据类型
    char c1 = 98;
    System.out.println(c1);->a
    char 的取值范围0- 65535
    char c1 = -97 ->报错:可能会损失精度

    //char类型是否可以存储中文
    char c6 = '中';
    System.out.println("c6");
    可以因为JAVA语言采用的是Unicode编码，每个字符占用2个字节，中文也是2个字节
    所以JAVA可以存储一个中文汉字
16.运算符
    什么是运算符
        就是对常量和变量进行操作的符号
    运算符的分类
        算术运算符、赋值运算符、比较（关系或条件）运算符，逻辑运算符，位运算符、三目运算符
    算术运算符
        +、-、*、/、%、++、--
    注意事项：
        +在java中的三个作用，代表是正好，做加法运算、字符串连接符
        整数相除结果只能获得整数，如果想要得到小数必须把数据变化为浮点数类型
        /获取的除法操作的商，%获得除法操作的余数
        %运算符
            当左边的绝对值小于右边的绝对值时结果是左边
            倍数时结果是0
            左>右获得是余数
            %只与左边有关
            任何一个正整数%2结果不是0就是1用来做切换条件
17 ++和--运算符
    见Demo2_Operator
18















